colMeans(iris)
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
library(datasets)
data(mtcars)
?mtcars
names(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)[4]
tapply(mtcars$hp, mtcars$cyl, mean)$4
tapply(mtcars$hp, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)[[4]]
tapply(mtcars$hp, mtcars$cyl, mean)[[1]]
avgHpPerCyl <- tapply(mtcars$hp, mtcars$cyl, mean)
avgHpPerCyl
avgHpPerCyl[4]
avgHpPerCyl[[4]]
avgHpPerCyl[[1]]
avgHpPerCyl[[1]] - avgHpPerCyl[[3]]
debug(ls)
ls
ls(.)
function (name, pos = -1L, envir = as.environment(pos), all.names = FALSE,
pattern)
{
if (!missing(name)) {
pos <- tryCatch(name, error = function(e) e)
if (inherits(pos, "error")) {
name <- substitute(name)
if (!is.character(name))
;
name <- deparse(name)
warning(gettextf("%s converted to character string",
sQuote(name)), domain = NA)
pos <- name
}
}
all.names <- .Internal(ls(envir, all.names))
if (!missing(pattern)) {
if ((ll <- length(grep("[", pattern, fixed = TRUE))) &&
ll != length(grep("]", pattern, fixed = TRUE))) {
if (pattern == "[") {
pattern <- "\\["
warning("replaced regular expression pattern '[' by  '\\\\['")
}
else if (length(grep("[^\\\\]\\[<-", pattern))) {
pattern <- sub("\\[<-", "\\\\\\[<-", pattern)
warning("replaced '[<-' by '\\\\[<-' in regular expression pattern")
}
}
grep(pattern, all.names, value = TRUE)
}
else all.names
}
source('~/workspace/stats/ProgrammingAssignment2/cachematrix.R')
source('~/workspace/stats/ProgrammingAssignment2/cachematrix.R')
source('~/workspace/stats/ProgrammingAssignment2/cachematrix.R')
source('~/workspace/stats/ProgrammingAssignment2/cachematrix.R')
source('~/workspace/stats/ProgrammingAssignment2/cachematrix.R')
source('~/workspace/stats/ProgrammingAssignment2/cachematrix.R')
source('~/workspace/stats/ProgrammingAssignment2/cachematrix.R')
source('~/workspace/stats/ProgrammingAssignment2/cachematrix.R')
source('~/workspace/stats/ProgrammingAssignment2/cachematrix.R')
source('~/workspace/stats/ProgrammingAssignment2/cachematrix.R')
source('~/workspace/stats/ProgrammingAssignment2/cachematrix.R')
source('~/workspace/stats/ProgrammingAssignment2/cachematrix.R')
source('~/workspace/stats/ProgrammingAssignment2/cachematrix.R')
source('~/workspace/stats/ProgrammingAssignment2/cachematrix.R')
source('~/workspace/stats/ProgrammingAssignment2/cachematrix.R')
source('~/workspace/stats/ProgrammingAssignment2/cachematrix.R')
source('~/workspace/stats/ProgrammingAssignment2/cachematrix.R')
source('~/workspace/stats/ProgrammingAssignment2/cachematrix.R')
source('~/workspace/stats/ProgrammingAssignment2/cachematrix.R')
source('~/workspace/stats/ProgrammingAssignment2/cachematrix.R')
source('~/workspace/stats/ProgrammingAssignment2/cachematrix.R')
source('~/workspace/stats/ProgrammingAssignment2/cachematrix.R')
## Creates a matrix object from a regular matrix
## with extra methods to get the inverse matrix
makeCacheMatrix <- function(x = matrix()) {
i <- NULL
set <- function (y) {
x <<- y
i <<- NULL
}
get <- function () x
setInverse <- function (inverse) i <<- inverse
getInverse <- function () i
list(set = set, get = get,
setInverse = setInverse,
getInverse = getInverse)
}
## Returns the inverse matrix if already set or
## calculates it, sets it and returns it
ls('.')
debug(sum)
sum(1:3)
library(datasets)
data(iris)
names(iris)
tapply(iris$Sepal.Length, iris$Species, mean)
set.seed(1)
rpois(5, 2)
rnorm(10)
?rnorm
rnorm(10, mean = 0.5, std = 0.5)
rnorm(10, mean = 0.5, sd = 0.5)
rnorm(10, mean = 0.5, sd = 0.5)
rnorm(10, mean = 0.5, sd = 0.5)
set.seed(20)
x <- rnorm(100)
e <- rnorm(100, 0, 2)
y <- 0.5 + 2 * x + e
summary(y)
plot(x, y)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
set.seed(20)
x <- rnorm(100)
e <- rnorm(100, 0, 2)
y <- 0.5 + 2 * x + e
summary(y)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
summary(y)
plot(y)
set.seed(10)
x <- rbinom(100, 1, 0.5)
e <- rnorm(100, 0, 2)
y <- 0.5 + 2 * x + e
summary(y)
plot(x, y)
set.seed(1)
x <- rnorm(100)
log.mu <- 0.5 + 0.3 * x
y <- rpois(100, exp(log.mu))
summary(y)
plot(x, y)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
summary(y)
plot(y)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(y)
sample(1:10)
sample(1:10)
sample(1:10)
sample(1:10)
sample(1:10)
sample(1:10)
sample(rnorm(10))
sample(rnorm(10))
sample(rnorm(10))
set.seed(1)
sample(rnorm(10))
set.seed(1)
sample(rnorm(10))
set.seed(1)
rnorm(10)
set.seed(1)
rnorm(10)
System.time()
System.time
system.time
system.time()
system.time(function () print('hello'))
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
?lm
y <- 1:100
x <- 1:100
Rprof()
fit <- lm(y ~ x)
Rprof(NULL)
summaryRprof()
y <- 1:1000000
x <- 1:1000000
Rprof()
fit <- lm(y ~ x)
Rprof(NULL)
summaryRprof()
setwd("~/workspace/stats/rprog-data-ProgAssignment3-data")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
names(outcome)
outcome[1, 11]
outcome[, 11] <- as.numeric(outcome[, 11])
nrow(outcome)
hist(outcome[, 11])
class(outcome)
outcome.names
?stop
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best('A', matrix(State = c("A")))
best('A', data.frame(State = c("A")))
best("A", "IL")
outcome$State
best("A", "IL")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("A", "IL")
best("IL", "A")
best("zz", "A")
best("IL", "heart attack")
names(outcome)
outcome[, 11]
outcome[11,]
outcome[11, c(11, 17, 23)]
outcome[1, c(11, 17, 23)]
outcome[1:10, c(11, 17, 23)]
outcome[4, c(11, 17, 23)]
c("q", "w", "e")["e"]
c("q", "w", "e")$e
match(c("q", "w", "e"), w)
match(c("q", "w", "e"), "w")
match("w", c("q", "w", "e"))
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("IL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("IL", "heart attack")
?read.csv
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("IL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("IL", "heart attack")
head(best("IL", "heart attack"))
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
head(best("IL", "heart attack"))
?as.numeric
best("IL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("IL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
min(dataNoNan[outcomeColumnIndex])
best("IL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("IL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("IL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("IL", "heart attack")
warnings()
source('~/.active-rstudio-document')
warnings()
best("IL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("IL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("IL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("IL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("IL", "heart attack")
warnings()
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
warnings()
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
warnings()
best("IL", "heart attack")
source('~/.active-rstudio-document')
best("IL", "heart attack")
which.min(c(1, 2, 3))
which.min(c(1, 2, 3, 0))
which.min(c(1, 2, 3, 0, 0))
c[c = 0]
c[c == 0]
tm <- matrix(c("q", 1, "w", 2, "e", 1), nrow = 3, ncol = 2)
tm
tm[tm[2] == 1, ]
tm[tm[2] = 1, ]
tm <- data.frame(name = c("q", "w", "e"), value = c(1, 2, 1))
tm
tm[tm$value = 1, ]
tm[tm$value == 1, ]
tm[tm[2] == 1, ]
tm[tm[1] == 1, ]
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("IL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("IL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("IL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("IL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("IL", "heart attack")
outcome[1, 1:10]
outcome[1:10,]
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("IL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("IL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("IL", "heart attack")
outcome[1, 1:10]
outcome[1,]
outcome[1:2,]
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("IL", "heart attack")
source('~/.active-rstudio-document')
best("IL", "heart attack")
outcome[1:10,]$State
best("AL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("AL", "heart attack")
source('~/.active-rstudio-document')
best("AL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("AL", "heart attack")
which.min(c(1, 2, 3, 0, 0))
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
which.min(c(1, 2, 3, 0, 0))
best("AL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("AL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("AL", "heart attack")
source('~/.active-rstudio-document')
best("AL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("AL", "heart attack")
best("IL", "heart attack")
best("CA", "heart attack")
source('~/.active-rstudio-document')
best("CA", "heart attack")
source('~/.active-rstudio-document')
best("CA", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("CA", "heart attack")
best("NY", "heart attack")
best("FL", "heart attack")
best("QC", "heart attack")
best("MC", "heart attack")
best("MI", "heart attack")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
tmp <- outcome[, c(2, 11, 17, 23)]
View(tmp)
View(tmp)
tmp <- outcome[, c(2, 7, 11, 17, 23)]
View(tmp)
View(tmp)
best("AL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("AL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("AL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("AL", "heart attack")
outcome[, "State"]
source('~/.active-rstudio-document')
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("AL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("AL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("AL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("AL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("AL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("AL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("AL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("AL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("AL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("AL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("AL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("AL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("AL", "heart attack")
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
best("AL", "heart attack")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
source('~/workspace/stats/rprog-data-ProgAssignment3-data/best.R')
submit()
submit()
submit()
source('~/workspace/stats/rprog-data-ProgAssignment3-data/rankhospital.R')
source('~/workspace/stats/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", "best")
rankhospital("TX", "heart failure", "worst")
rankhospital("TX", "heart failure", 7)
source('~/workspace/stats/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("TX", "heart failure", 7)
rankhospital("TX", "heart failure", 4)
nrow(outcome)
rankhospital("TX", "heart failure", 4)
data[, outcomeColumnIndex] <- as.numeric(data[, outcomeColumnIndex])
data[, outcomeColumnIndex] <- as.numeric(data[, outcomeColumnIndex])
data[, outcomeColumnIndex] <- as.numeric(data[, outcomeColumnIndex])
data[, outcomeColumnIndex] <- as.numeric(data[, outcomeColumnIndex])
data[, outcomeColumnIndex] <- as.numeric(data[, outcomeColumnIndex])
data[, outcomeColumnIndex] <- as.numeric(data[, outcomeColumnIndex])
data[, outcomeColumnIndex] <- as.numeric(data[, outcomeColumnIndex])
data[, outcomeColumnIndex] <- as.numeric(data[, outcomeColumnIndex])
data[, outcomeColumnIndex] <- as.numeric(data[, outcomeColumnIndex])
data[, outcomeColumnIndex] <- as.numeric(data[, outcomeColumnIndex])
source('~/workspace/stats/rprog-data-ProgAssignment3-data/rankhospital.R')
}
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", 4)
rowsWithMinValue[order(rowsWithMinValue[, hospitalNameIndex]), hospitalNameIndex]
debugSource('~/workspace/stats/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("TX", "heart failure", 4)
debugSource('~/workspace/stats/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", 4)
debugSource('~/workspace/stats/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("TX", "heart failure", 4)
orderedRows[rank, ]
orderedRows
debugSource('~/workspace/stats/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", 4)
debugSource('~/workspace/stats/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("TX", "heart failure", 4)
View(dataNoNan)
View(dataNoNan)
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
debugSource('~/workspace/stats/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
View(data)
View(data)
debugSource('~/workspace/stats/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
debugSource('~/workspace/stats/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
View(rowsWithRankValue)
View(rowsWithRankValue)
tmp <- data.frame(a = c(1, 2, 3, 1, 2), b = c("e", "d", "c", "f", "a"))
tmp[order(tmp[, 1])]
tmp[order(tmp[, 1]), ]
tmp[order(tmp[, 1], tmp[, 2]), ]
debugSource('~/workspace/stats/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
View(orderedData)
View(dataNoNan)
source('~/workspace/stats/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
submit()
tmp
rbin(tmp, c(5, "z")
)
rbind(tmp, c(5, "z"))
rbind(tmp, data.frame( a= 5, b = "z"))
source('~/workspace/stats/rprog-data-ProgAssignment3-data/rankall.R')
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
debugSource('~/workspace/stats/rprog-data-ProgAssignment3-data/rankall.R')
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
source('~/workspace/stats/rprog-data-ProgAssignment3-data/rankall.R')
head(rankall("heart attack", 20), 10)
unique(c(1, 2 , 3, 1 , 1 , 2))
source('~/workspace/stats/rprog-data-ProgAssignment3-data/rankall.R')
source('~/workspace/stats/rprog-data-ProgAssignment3-data/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/workspace/stats/rprog-data-ProgAssignment3-data/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/workspace/stats/rprog-data-ProgAssignment3-data/rankall.R')
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
source('~/workspace/stats/rprog-data-ProgAssignment3-data/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
head(rankall("pneumonia", 20), 10)
head(rankall("pneumonia", "worst"), 10)
source('~/workspace/stats/rprog-data-ProgAssignment3-data/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source('~/workspace/stats/rprog-data-ProgAssignment3-data/rankall.R')
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
submit()
submit()
submit()
install.packages("swirl")
library(swirl)
swirl()
